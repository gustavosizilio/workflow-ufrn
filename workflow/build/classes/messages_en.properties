layout.text.workflow.analysis=Analysis
layout.text.workflow.observations=Observations
layout.text.workflow.trackResults=Track results
layout.text.workflow.downloadTaskResults=Download task results
layout.text.workflow.downloadQuestionnairesResults=Download questionnaires results
layout.text.workflow.downloadExperimentSpecification=Download experiment specification
layout.text.workflow.nextTurn=Next turn
layout.text.workflow.next=Next
layout.text.workflow.start=Start
layout.text.workflow.wastedTime=Execution time
layout.text.workflow.notStarted=Not started
layout.text.workflow.startedAt=Started at
layout.text.workflow.finishedAt=Finished at
layout.text.workflow.time=Time
layout.text.workflow.pauseTime=Pause time
layout.text.workflow.timeActivities=Time activities
layout.text.workflow.experiment=Experiment
layout.text.workflow.experiments=Experiments
layout.text.workflow.comment=Comment
layout.text.workflow.comments=Comments
layout.text.workflow.name=Name
layout.text.workflow.title=Title
layout.text.workflow.pause=Pause
layout.text.workflow.continue=Continue
layout.text.workflow.pauseReason=Reason for Pause
layout.text.workflow.description=Description
layout.text.workflow.experimentConfiguration=Experiment Configuration
layout.text.workflow.experimentDesign=Experiment Design
layout.text.workflow.deployDefinition=Deploy Definition
layout.text.workflow.deploy=Deploy
layout.text.downloadDefinition=Download Experiment Definition
layout.text.workflow.clean=Clean
layout.text.workflow.uploadFileConfiguration=Upload file configuration
layout.text.workflow.uploadDesignConfiguration=Upload design configuration
layout.text.workflow.manual=Manual
layout.text.workflow.loadFromDefinition=Load from experiment definition
layout.text.workflow.clearDesign=Clear Design
layout.text.workflow.artifactsConfiguration=Artifacts Configuration
layout.text.workflow.artifact=Artifact
layout.text.workflow.outputArtifacts=Output artifacts
layout.text.workflow.inputArtifacts=Input artifacts
layout.text.workflow.sendArtifacts=Send Artifacts
layout.text.workflow.finishTask=Finish Task
layout.text.workflow.finish=Finish
layout.text.workflow.taskFinished=Task Finished
layout.text.workflow.treatment=Treatment
layout.text.workflow.treatments=Treatments
layout.text.workflow.activity=Activity
layout.text.workflow.task=Task
layout.messages.workflow.invalidFileConfiguration=The file content is not valid
layout.text.workflow.graph=Graph
layout.text.workflow.loadFromExpFile=Load the definition from exp file
layout.text.workflow.backToEditor=Back to editor...
layout.text.workflow.fields=Fields
layout.text.workflow.questionnaires=Questionnaires
layout.text.workflow.refreshData=Refresh Data
layout.text.workflow.downloadMetricsSheet=Download metrics sheet
layout.text.workflow.newElement=Add Element
layout.text.workflow.elements=Elements

layout.text.userNotFound=This user was not found in the database, you can invite him first and he will receive an email notification with the password.
layout.text.name=Name
layout.text.email=email
layout.text.invite=Invite
layout.text.upload=Upload
layout.text.undeploy=Undeploy
layout.text.download=Download
layout.text.send=Send
layout.text.details=Details
layout.text.actions=Actions
layout.text.edit=Edit
layout.text.deploy=Deploy
layout.text.show=Show
layout.text.remove=Remove
layout.text.new=New
layout.text.back=Back
layout.text.save=Save
layout.text.stop=Stop
layout.text.cancel=Cancel
layout.text.cancelAndRemove=Cancel and remove
layout.text.updateAndContinue=Update and continue
layout.text.updateAndBack=Update and back
layout.text.list=List
layout.text.login=Login
layout.text.logout=Logout
layout.text.experimentsExecution=Experiments Execution
layout.text.myExperiments=My Experiments
layout.text.email=E-mail
layout.text.password=Password
layout.text.rememberMe=Remember me
layout.text.user=User
layout.text.users=Users
layout.text.addToSort=Add to sort
layout.text.add=Add
layout.text.block=Block
layout.text.sort=Sort
layout.text.latinSquare=Latin Square
layout.text.treatment=Treatment
layout.text.subjects=Subjects
layout.text.skipFinishedTask=Skip finished task
layout.text.questionnaire=Questionnaire

layout.messages.fileUploadError=File upload error
layout.messages.error=Error
layout.messages.genericError=An unexpected error occurred, please try again later
layout.messages.areYouSure?=Are you sure?
layout.messages.areYouSureCannotUndone?=Are you sure? This action cannot be undone.
layout.messages.welcome=Welcome 
layout.messages.loading=Loading...
layout.messages.wait=Wait...
layout.messages.deployExpFile=Deploy Exp file. It will erase the current model!
layout.messages.cancel=Cancel
layout.application.name=Experiment Executer


# FORMALIZATION MODULE CONFIGURATION PARAMS
layout.formalization.ExperimentElement.hint=Represents an experiment configuration and defines the Experimental Design, the Processes and the Questionnaires of the experiment.
layout.formalization.ExperimentElement.name.hint=The identifier of the experiment (without spaces).
layout.formalization.ExperimentElement.name.styleClass=id
layout.formalization.ExperimentElement.description.hint=A short description of the experiment.

layout.formalization.ExperimentalDesign.hint=Each experiment definition has an Experimental Design. It has a set of information related to the experiment itself, such as authorship, abstract and keywords. Furthermore, it is composed by a set of Goals (Goal element), a set of research questions (ResearchQuestion element), a set of research hypotheses (ResearchHypothesis element), a set of dependent variables (DepedentVariable element), Factors and their levels (Factor and Level elements), a statistical design of experiment (DoE element), a context represented by a set of parameters (Parameter element), and the number of internal replication.
layout.formalization.ExperimentalDesign.type.hint=The type of the statistical design of the experiment.
layout.formalization.ExperimentalDesign.replication.hint=This element is used to define the number of repetition of unitary experiments in an experimentation. For each one of ExpDSL supported DoE it has a mean. For RCD it means the number of repetition for each treatment, for the RCBD it means the numer of repetition for each block, and for the LS it means the number of squares.

layout.formalization.Author.hint=The information about the experiment authors can be defined using this element.
layout.formalization.Author.identifier.hint=The identifier of the Author (without spaces).
layout.formalization.Author.identifier.styleClass=id
layout.formalization.Author.name.hint=The name of the Author.

layout.formalization.Abstract.styleClass=hidden
layout.formalization.SimpleAbstract.hint=The study abstract can be expressed in a flat or structured way. Use this element to the flat structure.
layout.formalization.SimpleAbstract.description.hint=The abstract in text plain format.
layout.formalization.StructuredAbstract.hint=The study abstract can be expressed in a flat or structured way. In this structured way, we have to inform the following information for the experiment: Background, Objectives, Method, Results, Limitations, and Conclusions.
layout.formalization.StructuredAbstract.background.hint=An description of the background scenario related to the purpose and the area of the experiment.
layout.formalization.StructuredAbstract.objective.hint=What are the reason(s) for writing the paper or the aims of the research?
layout.formalization.StructuredAbstract.methods.hint=How are the objectives achieved? Include the main method(s) used for the research. What is the approach to the topic and what is the theoretical or subject scope of the paper?
layout.formalization.StructuredAbstract.results.hint=What was found in the course of the work? This will refer to analysis, discussion, or results.
layout.formalization.StructuredAbstract.limitations.hint=If research is reported on in the paper this section must be completed and should include suggestions for future research and any identified limitations in the research process.
layout.formalization.StructuredAbstract.conclusions.hint=What outcomes and implications for practice, applications and consequences are identified? How will the research impact upon the business or enterprise? What changes to practice should be made as a result of this research? What is the commercial or economic impact? Not all papers will have practical implications.

layout.formalization.Keyword.hint=The Keyword element is used to present the study keywords.
layout.formalization.Keyword.description.hint=The Keyword text.

layout.formalization.Goal.styleClass=hidden
layout.formalization.SimpleGoal.hint=The research goals to be reached for the experiment is defined in the Goal element. It is used to represent \u201CWhat is the research question to be answered by this study?\u201D. This information is important to explicit the research objectives. This one has the identifier and its correspondent description.
layout.formalization.SimpleGoal.name.hint=The identifier of the Goal (without spaces).
layout.formalization.SimpleGoal.name.styleClass=id
layout.formalization.SimpleGoal.description.hint=The Goal in text plain format.
layout.formalization.StructuredGoal.hint=The research goals to be reached for the experiment is defined in the Goal element. It is used to represent \u201CWhat is the research question to be answered by this study?\u201D. This information is important to explicit the research objectives. This one has an identifier and a structured way to formalize the description that follows the GQM.
layout.formalization.StructuredGoal.name.hint=The identifier of the Goal (without spaces).
layout.formalization.StructuredGoal.name.styleClass=id
layout.formalization.StructuredGoal.object.hint=The object of the study. Example: Analyze <<\u201Cdifferent SPL techniques\u201D>> for the purpose of \u201CInvestigating\u201D with respect to their \u201Ctime of configuration knowledge comprehension\u201D the point of view of the \u201CSPL Designer\u201D in the context of \u201CSPL\u201D
layout.formalization.StructuredGoal.technique.hint=The technique used. Example: Analyze \u201Cdifferent SPL techniques\u201D for the purpose of <<\u201CInvestigating\u201D>> with respect to their \u201Ctime of configuration knowledge comprehension\u201D the point of view of the \u201CSPL Designer\u201D in the context of \u201CSPL\u201D
layout.formalization.StructuredGoal.quality.hint=The quality observed. Example: Analyze \u201Cdifferent SPL techniques\u201D for the purpose of\u201CInvestigating\u201D with respect to their <<\u201Ctime of configuration knowledge comprehension\u201D>> the point of view of the \u201CSPL Designer\u201D in the context of \u201CSPL\u201D
layout.formalization.StructuredGoal.ptView.hint=The point of view observed. Example: Analyze \u201Cdifferent SPL techniques\u201D for the purpose of\u201CInvestigating\u201D with respect to their \u201Ctime of configuration knowledge comprehension\u201D the point of view of the <<\u201CSPL Designer\u201D>> in the context of \u201CSPL\u201D
layout.formalization.StructuredGoal.contextOf.hint=The context area observed. Example: Analyze \u201Cdifferent SPL techniques\u201D for the purpose of\u201CInvestigating\u201D with respect to their \u201Ctime of configuration knowledge comprehension\u201D the point of view of the \u201CSPL Designer\u201D in the context of <<\u201CSPL\u201D>>

layout.formalization.ResearchQuestion.hint=This is an optional element that specifies what the experiment is expected to answer. It needs to be related to an experiment Goal element in order to allow the traceability.
layout.formalization.ResearchQuestion.name.hint=The identifier of the Research Question (without spaces).
layout.formalization.ResearchQuestion.name.styleClass=id
layout.formalization.ResearchQuestion.description.hint=The Research Question description in text plain format.
layout.formalization.ResearchQuestion.goal.hint=The Goal related to this Research Question.

layout.formalization.ResearchHypothesis.hint=This is an optional element that allows defining what the experiment is expected to test. Each research hypothesis needs to be related to an experiment goal. Each hypothesis can specify an identifier and a textual description (not mandatory), besides the association with a research goal.
layout.formalization.ResearchHypothesis.name.hint=The identifier of the Research Hypothesis (without spaces).
layout.formalization.ResearchHypothesis.name.styleClass=id
layout.formalization.ResearchHypothesis.description.hint=The Research Hypothesis description in text plain format.
layout.formalization.ResearchHypothesis.goal.hint=The Goal related to this Research Hypothesis.

layout.formalization.DepVariable.hint=Dependent Variable: This element is used to describe the variables that are measured to ascertain whether the independent variable had an effect on the outcome. Each dependent variable must be related to a research question or a research hypothesis.
layout.formalization.DepVariable.name.hint=The identifier of the Dependent Variable (without spaces).
layout.formalization.DepVariable.name.styleClass=id
layout.formalization.DepVariable.description.hint=The Dependent Variable description in text plain format.
layout.formalization.DepVariable.scaleType.hint=Defines the scale for possible values to the variable. <<Nominal Scale>>: is for mutual exclusive, but not ordered, categories. For example, your study might compare five different genotypes. You can code the five genotypes with numbers if you want, but the order is arbitrary and any calculations (for example, computing an average) would be meaningless;          <<Ordinal Scale>>: is one where the order matters but not the difference between values. For example, you might ask patients to express the amount of pain they are feeling on a scale of 1 to 10. A score of 7 means more pain that a score of 5, and that is more than a score of 3. But the difference between the 7 and the 5 may not be the same as that between 5 and 3. The values simply express an order. Another example would be movie ratings, from * to *****;          <<Interval Scale>>: is a measurement where the difference between two values is meaningful. The difference between a temperature of 100 degrees and 90 degrees is the same difference as between 90 degrees and 80 degrees.          <<Ratio Scale>>:has all the properties of an interval variable, and also has a clear definition of 0.0. When the variable equals 0.0, there is none of that variable. Variables like height, weight, enzyme activity are ratio variables.          <<Absolute Scale>>: is the most informative of all, example: number of line of code (LOC) in a program.
layout.formalization.DepVariable.rq.hint=The Research Questions related to this variable (can't be selected if this variable are related to an Research Hypothesis).
layout.formalization.DepVariable.rh.hint=The Research Hypothesis related to this variable (can't be selected if this variable are related to an Research Question).

layout.formalization.Range.hint=A possible value to the variable.
layout.formalization.Range.name.hint=The name that represents the value of the variable.
layout.formalization.Range.name.styleClass=id

layout.formalization.Factor.hint=This Factor element is used to describe the variables that are frequently manipulated in the experiment and may influence the dependent variable(s).
layout.formalization.Factor.name.hint=The identifier of the Factor (without spaces).
layout.formalization.Factor.name.styleClass=id
layout.formalization.Factor.description.hint=The Factor description in text plain format.
layout.formalization.Factor.scaleType.hint=Defines the scale for possible values to the variable. <<Nominal Scale>>: is for mutual exclusive, but not ordered, categories. For example, your study might compare five different genotypes. You can code the five genotypes with numbers if you want, but the order is arbitrary and any calculations (for example, computing an average) would be meaningless;          <<Ordinal Scale>>: is one where the order matters but not the difference between values. For example, you might ask patients to express the amount of pain they are feeling on a scale of 1 to 10. A score of 7 means more pain that a score of 5, and that is more than a score of 3. But the difference between the 7 and the 5 may not be the same as that between 5 and 3. The values simply express an order. Another example would be movie ratings, from * to *****;          <<Interval Scale>>: is a measurement where the difference between two values is meaningful. The difference between a temperature of 100 degrees and 90 degrees is the same difference as between 90 degrees and 80 degrees.          <<Ratio Scale>>:has all the properties of an interval variable, and also has a clear definition of 0.0. When the variable equals 0.0, there is none of that variable. Variables like height, weight, enzyme activity are ratio variables.          <<Absolute Scale>>: is the most informative of all, example: number of line of code (LOC) in a program.

layout.formalization.DOE.styleClass=hidden
layout.formalization.LS.hint=This element is responsible to define the statistical design of experiment (DoE) as a Latin square (LS).
layout.formalization.LS.col.hint=The Factor variable that represents the column of the square.
layout.formalization.LS.row.hint=The Factor variable that represents the row of the square.
layout.formalization.LS.treatment.hint=The Factor variable that represents the treatment (cel) of the square.

layout.formalization.RCBD.hint=This element is responsible to define the statistical design of experiment (DoE) as a randomized complete block design (RCBD).
layout.formalization.RCBD.blockVariable.hint=The Factor variable that represents the block.
layout.formalization.RCBD.treatment.hint=The Factor variable that represents the treatment.

layout.formalization.CRB.hint=This element is responsible to define the statistical design of experiment (DoE) as a completely randomized design (CRD).
layout.formalization.CRB.treatment.hint=The Factor variable that represents the treatment.

layout.formalization.OTHER.hint=This element is responsible to define the statistical design of experiment (DoE) as a specific design (this option will not provide automatic treatment distribution).
layout.formalization.OTHER.name.hint=The name of the chosen design.

layout.formalization.Parameter.hint=This information is used to characterize the experiment context. It is useful to define the borders of each experiment.
layout.formalization.Parameter.name.hint=The identifier of the Parameter (without spaces).
layout.formalization.Parameter.name.styleClass=id
layout.formalization.Parameter.description.hint=The Parameter description in text plain format.
layout.formalization.Parameter.scaleType.hint=Defines the scale for possible values to the variable. <<Nominal Scale>>: is for mutual exclusive, but not ordered, categories. For example, your study might compare five different genotypes. You can code the five genotypes with numbers if you want, but the order is arbitrary and any calculations (for example, computing an average) would be meaningless;          <<Ordinal Scale>>: is one where the order matters but not the difference between values. For example, you might ask patients to express the amount of pain they are feeling on a scale of 1 to 10. A score of 7 means more pain that a score of 5, and that is more than a score of 3. But the difference between the 7 and the 5 may not be the same as that between 5 and 3. The values simply express an order. Another example would be movie ratings, from * to *****;          <<Interval Scale>>: is a measurement where the difference between two values is meaningful. The difference between a temperature of 100 degrees and 90 degrees is the same difference as between 90 degrees and 80 degrees.          <<Ratio Scale>>:has all the properties of an interval variable, and also has a clear definition of 0.0. When the variable equals 0.0, there is none of that variable. Variables like height, weight, enzyme activity are ratio variables.          <<Absolute Scale>>: is the most informative of all, example: number of line of code (LOC) in a program.

layout.formalization.Threats.hint=This information is used to describe the threats to validity of the experiment. The validity of the results achieved in experiments depends on factors in the experiment settings. Different types of validity can be prioritized depending on the goal of the experiment.
layout.formalization.Threats.name.hint=The identifier of the Threat (without spaces).
layout.formalization.Threats.name.styleClass=id
layout.formalization.Threats.description.hint=The Threat description in text plain format.
layout.formalization.Threats.type.hint=<<Internal validity>> concerns matters that may affect the independent variable with respect to causality, without the researchers knowledge;          <<External validity>> concerns generalisation of the experiment result to other environments than the one in which the study is conducted;          <<Construct validity>> concerns generalisation of the experiment result to concept or theory behind the experiment; <<Threats to reliability>> are those factors that cause (or are sources of) error. After all, the instability or inconsistency in the measurement you are using comes from such error;          <<Conclusion validity>> concerns the statistical analysis of results and the composition of subjects.
layout.formalization.Threats.CA.hint=The actions that may be taken to mitigate the threat.



layout.formalization.Process.hint=An experiment can have a set of process. Each data collection procedure is defined as a process. A process is composed of a set of Tasks (Task element). This element is important to enable the workflow generation that is responsible by the participant guiding as well as can be responsible by the data collection.
layout.formalization.Process.treatment.hint=The treatments related to this process.
layout.formalization.Process.name.hint=The identifier of the Process (without spaces).
layout.formalization.Process.name.styleClass=id
layout.formalization.Process.role.hint=The roles attached to this process. The Process linked to the Participant role will generate the guideline of execution for participants. For now, there's no guidelines for Researchers.

layout.formalization.Task.hint=This element is used to describe each participant/researcher task. They will be guiding by the process to execute each defined task. Generalizing, a task has an identifier (name), a description, and, optionally, a role. It can have a list of related artefacts (input or output), a set of Fields and Questionnaires.
layout.formalization.Task.name.hint=The identifier of the Task (without spaces).
layout.formalization.Task.name.styleClass=id
layout.formalization.Task.description.hint=The Task description in text plain format.
layout.formalization.Task.next.hint=The Task to be executed after this one.
layout.formalization.Task.role.hint=The Role attached to this Task.
layout.formalization.Task.questionnaire.hint=The Questionnaires attached to this Task.

layout.formalization.Artefact.hint=This element has a name, a description and a type (input, output or input/output). It is used to represent any instrument necessary to a task execution.
layout.formalization.Artefact.name.hint=The identifier of the Artefact (without spaces).
layout.formalization.Artefact.name.styleClass=id
layout.formalization.Artefact.description.hint=The Artefact description in text plain format.
layout.formalization.Artefact.type.hint=<<Input>>: the participant have to download this artefact to do the task during the task execution. <<Output>>: the participant have to upload this artefact after the task execution. <<Inoutput>>: the artefact are both input and output.

layout.formalization.Field.hint=This element represent a field to collect generic data in a textarea attached to the Task.
layout.formalization.Field.variable.hint=The name of the variable to store the value of the input information. This value is also the label of the field.
layout.formalization.Field.variable.styleClass=id
layout.formalization.Field.textField.styleClass=hidden
layout.formalization.Field.textField.labelStyleClass=hidden

layout.formalization.Questionnaire.hint=Each questionnaire is composed of a set of Question elements. This element is important to allow gathering of feedback, it also can be used to collect data, and to allow the experiment report generation.
layout.formalization.Questionnaire.name.hint=The identifier of the Questionnaire (without spaces).
layout.formalization.Questionnaire.name.styleClass=id
layout.formalization.Questionnaire.relatesTo.hint=The Process that this Questionnaire is attached. Is the questionnaire is related with some Task, this information will be ignored. Also, if none Task or Process is related to this questionnaire, the experiment will be used as referece.
layout.formalization.Questionnaire.questionnaireType.hint=<<Pre>>: to be executed before the Task or Process; <<Post>>: to be executed after the Task or Process;  <<IMPORTANT>>: if the Questionnaire is related to one Task and a process, the Questionnaire will use the Task as reference and ignore the link with the process, it means that the Task has precedence over the Process. Also, if none Task or Process is related to this questionnaire, the experiment will be used as referece, it means pre experiment or post experiment execution.

layout.formalization.Question.hint=In general form, each Question is composed of a name, a description, a type (SingleChoice, MultipleChoice, Text, ParagraphText) and a set of Alternatives. The Alternatives have to be specified only to SingleChoice and MultipleChoice types.
layout.formalization.Question.req.styleClass=hidden
layout.formalization.Question.req.labelStyleClass=hidden
layout.formalization.Question.name.hint=The identifier of the Question (without spaces).
layout.formalization.Question.name.styleClass=id
layout.formalization.Question.description.hint=The Question description in text plain format.
layout.formalization.Question.type.hint=The type of the field in the Questionnaire form. 

layout.formalization.Alternatives.hint=The alternatives to the question. This options will be displayed as alternatives to be selected according to the type of question. The Alternatives have to be specified only to SingleChoice and MultipleChoice types.
layout.formalization.Alternatives.description.hint=The text to be displayed in the option of this Alternative.

#CORE MESSAGES
up=\u2191
down=\u2193
left=\u2039
right=\u203A

validator.assertFalse=validation failed
validator.assertTrue=validation failed
validator.future=must be a future date
validator.length=length must be between {min} and {max}
validator.max=must be less than or equal to {value}
validator.min=must be greater than or equal to {value}
validator.notNull=may not be null
validator.past=must be a past date
validator.pattern=must match "{regex}"
validator.range=must be between {min} and {max}
validator.size=size must be between {min} and {max}
validator.email=must be a well-formed email address

org.jboss.seam.loginFailed=Login failed
org.jboss.seam.loginSuccessful=Welcome, #0!

org.jboss.seam.TransactionFailed=Transaction failed
org.jboss.seam.NoConversation=The conversation ended, timed out or was processing another request
org.jboss.seam.IllegalNavigation=Illegal navigation
org.jboss.seam.ProcessEnded=Process #0 already ended
org.jboss.seam.ProcessNotFound=Process #0 not found
org.jboss.seam.TaskEnded=Task #0 already ended
org.jboss.seam.TaskNotFound=Task #0 not found
org.jboss.seam.NotLoggedIn=Please log in first

javax.faces.component.UIInput.CONVERSION=value could not be converted to the expected type
javax.faces.component.UIInput.REQUIRED=value is required
javax.faces.component.UIInput.UPDATE=an error occurred when processing your submitted information
javax.faces.component.UISelectOne.INVALID=value is not valid
javax.faces.component.UISelectMany.INVALID=value is not valid

javax.faces.converter.BigDecimalConverter.DECIMAL=value must be a number
javax.faces.converter.BigDecimalConverter.DECIMAL_detail=value must be a signed decimal number consisting of zero or more digits, optionally followed by a decimal point and fraction, eg. {1}
javax.faces.converter.BigIntegerConverter.BIGINTEGER=value must be an integer
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail=value must be a signed integer number consisting of zero or more digits
javax.faces.converter.BooleanConverter.BOOLEAN=value must be true or false
javax.faces.converter.BooleanConverter.BOOLEAN_detail=value must be true or false (any value other than true will evaluate to false)
javax.faces.converter.ByteConverter.BYTE=value must be a number between 0 and 255
javax.faces.converter.ByteConverter.BYTE_detail=value must be a number between 0 and 255
javax.faces.converter.CharacterConverter.CHARACTER=value must be a character
javax.faces.converter.CharacterConverter.CHARACTER_detail=value must be a valid ASCII character
javax.faces.converter.DateTimeConverter.DATE=value must be a date
javax.faces.converter.DateTimeConverter.DATE_detail=value must be a date,  eg. {1}
javax.faces.converter.DateTimeConverter.TIME=value must be a time
javax.faces.converter.DateTimeConverter.TIME_detail=value must be a time,  eg. {1}
javax.faces.converter.DateTimeConverter.DATETIME=value must be a date and time
javax.faces.converter.DateTimeConverter.DATETIME_detail=value must be a date and time,  eg. {1}
javax.faces.converter.DateTimeConverter.PATTERN_TYPE=a pattern or type attribute must be specified to convert the value
javax.faces.converter.DoubleConverter.DOUBLE=value must be a number
javax.faces.converter.DoubleConverter.DOUBLE_detail=value must be a number between 4.9E-324 and 1.7976931348623157E308
javax.faces.converter.EnumConverter.ENUM=value must be convertible to an enum
javax.faces.converter.EnumConverter.ENUM_detail=value must be convertible to an enum or from the enum that contains the constant {1}
javax.faces.converter.EnumConverter.ENUM_NO_CLASS=value must be convertible to an enum or from the enum, but no enum class provided
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail=value must be convertible to an enum or from the enum, but no enum class provided
javax.faces.converter.FloatConverter.FLOAT=value must be a number
javax.faces.converter.FloatConverter.FLOAT_detail=value must be a number between 1.4E-45 and 3.4028235E38
javax.faces.converter.IntegerConverter.INTEGER=value must be an integer
javax.faces.converter.IntegerConverter.INTEGER_detail=value must be an integer number between -2147483648 and 2147483647
javax.faces.converter.LongConverter.LONG=value must be an integer
javax.faces.converter.LongConverter.LONG_detail=value must be an integer number between -9223372036854775808 and 9223372036854775807
javax.faces.converter.NumberConverter.CURRENCY=value must be a currency amount
javax.faces.converter.NumberConverter.CURRENCY_detail=value must be a currency amount, eg. {1}
javax.faces.converter.NumberConverter.PERCENT=value must be a percentage amount
javax.faces.converter.NumberConverter.PERCENT_detail=value must be a percentage amount, eg. {1}
javax.faces.converter.NumberConverter.NUMBER=value must be a number
javax.faces.converter.NumberConverter.NUMBER_detail=value must be a number
javax.faces.converter.NumberConverter.PATTERN=value must be a number
javax.faces.converter.NumberConverter.PATTERN_detail=value must be a number
javax.faces.converter.ShortConverter.SHORT=value must be an integer
javax.faces.converter.ShortConverter.SHORT_detail=value must be an integer number between -32768 and 32767

javax.faces.validator.DoubleRangeValidator.MAXIMUM=value must be less than or equal to {0}
javax.faces.validator.DoubleRangeValidator.MINIMUM=value must be greater than or equal to {0}
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE=value must be between {0} and {1}
javax.faces.validator.DoubleRangeValidator.TYPE=value is not of the correct type
javax.faces.validator.LengthValidator.MAXIMUM=value must be shorter than or equal to {0} characters
javax.faces.validator.LengthValidator.MINIMUM=value must be longer than or equal to {0} characters
javax.faces.validator.LongRangeValidator.MAXIMUM=value must be less than or equal to {0}
javax.faces.validator.LongRangeValidator.MINIMUM=value must be greater than or equal to {0}
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE=value must be between {0} and {1}
javax.faces.validator.LongRangeValidator.TYPE=value is not of the correct type
javax.faces.validator.NOT_IN_RANGE=value must be between {0} and {1}
javax.faces.converter.STRING=value could not be converted to a string



