<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:s="http://jboss.com/products/seam/taglib"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:rich="http://richfaces.org/rich"
    xmlns:a4j="http://richfaces.org/a4j"
    template="/layout/template.xhtml">
	<ui:define name="body">
		<rich:simpleTogglePanel switchType="client" rendered="#{executer.currentTaskNode == null 
																and executer.currentProcess.workflow.title != null
																and executer.currentProcess.workflow.title.length() > 0}" 
																label="#{executer.currentProcess.workflow.title}" opened="false" >
			<h:outputText value="#{executer.currentProcess.workflow.description}" />
		</rich:simpleTogglePanel>
		
		<br />
		
		<h:panelGroup rendered="#{executer.currentTaskNode != null}" >
			<h1>Activity: <h:outputText value=" #{executer.currentTaskNode.name}" /> </h1>
		</h:panelGroup>
							 
		<rich:panel header="#{executer.currentTaskNode.name}" id="panelTask"
			rendered="#{executer.currentTaskNode != null and executer.currentUserExecution.startedAt != null}">
			<h:outputText value="#{executer.currentTaskNode.description}" style="font-size: 13px;"  />
			<rich:dataList value="#{executer.currentTaskNode.inArtefacts}" var="artefact" rendered="#{executer.currentTaskNode.inArtefacts.size() gt 0}">
				<h:outputText value="#{artefact.name} " />
				<h:commandLink value="#{messages['layout.text.download']}" rendered="#{artefact.artefactFiles.size gt 0}"
								action="#{sendFile.sendFile(artefact.artefactFiles.get(0))}"
				 				target="_blank">
				</h:commandLink>
			</rich:dataList>
			
			<h:panelGroup rendered="#{executer.currentUserExecution != null}">
				<h:panelGrid columns="2">
					<h:outputLabel value="#{messages['layout.text.workflow.sendArtifacts']}:" rendered="#{executer.currentTaskNode.outArtefacts.size() gt 0}"/>
					<rich:dataTable value="#{executer.currentTaskNode.outArtefacts}" var="artefact"
					id="taskNodeArtefacts" rendered="#{executer.currentTaskNode.outArtefacts.size() gt 0}">
						<h:column>
							<f:facet name="header">#{messages['layout.text.workflow.name']}</f:facet>
							<h:outputText value="#{artefact.name}" />
						</h:column>
						<h:column>
							<f:facet name="header"></f:facet>
							
							<h:panelGroup rendered="#{artefact.get(executer.currentUserExecution) == null}">
								<a4j:commandLink value="#{messages['layout.text.send']}" action="#{executer.setCurrentArtefact(artefact)}" id="enviarModal"
								 				 reRender="uploadArtefact">
									<rich:componentControl for="panelArtefact" attachTo="enviarModal" operation="show" event="onclick"/>
								</a4j:commandLink>
							</h:panelGroup>
							<h:panelGroup rendered="#{artefact.get(executer.currentUserExecution) != null}">
								<h:panelGroup rendered="#{executer.currentUserExecution.finishedAt == null}" >
									<a4j:commandLink value="#{messages['layout.text.remove']}" action="#{executer.removeArtefact(artefact)}"
									 				 reRender="taskNodeArtefacts">
									</a4j:commandLink>
									<h:outputText value=" | " />
								</h:panelGroup>
								<h:commandLink value="#{messages['layout.text.download']}" action="#{sendFile.sendFile(artefact.get(executer.currentUserExecution))}"
								 				 target="_blank">
								</h:commandLink>							
							</h:panelGroup>
							
						</h:column>
					</rich:dataTable>
				</h:panelGrid>
				<h:panelGroup id="tasks">
					<br />
					<ui:repeat var="task" value="#{executer.currentTaskNode.tasks}">
						<a4j:commandButton action="#{executer.startTask(task)}" value="#{task.name}" reRender="tasks" styleClass="rich-stglpanel-header" style="width: 100%;" />
						<rich:panel bodyClass="rich-laguna-panel-no-header"	id="${task.id}Panel" rendered="#{executer.isCurrentTask(task)}">
							<h:outputText value="#{task.description}" style="font-size: 13px;" />
							<rich:dataList value="#{task.inArtefacts}" var="artefact" rendered="#{task.inArtefacts.size() gt 0}">
								<h:outputText value="#{artefact.name} " /> 
								<h:commandLink value="#{messages['layout.text.download']}" rendered="#{artefact.artefactFiles.size gt 0}"
												action="#{sendFile.sendFile(artefact.artefactFiles.get(0))}"
								 				target="_blank">
								</h:commandLink>
							</rich:dataList>
							<br /><br />
							<h:panelGrid columns="2">
								<h:outputLabel value="#{messages['layout.text.workflow.sendArtifacts']}:" rendered="#{task.outArtefacts.size() gt 0}"/>
								<rich:dataTable value="#{task.outArtefacts}"
								 style="width:500px" var="artefact" rendered="#{task.outArtefacts.size() gt 0}">
									<h:column>
										<f:facet name="header">#{messages['layout.text.workflow.name']}</f:facet>
										<h:outputText value="#{artefact.name}" />
									</h:column>
									<h:column>
										<f:facet name="header"></f:facet>
										
										<h:panelGroup rendered="#{artefact.get(executer.currentUserExecution) == null}">
											<a4j:commandLink value="#{messages['layout.text.send']}" action="#{executer.setCurrentArtefact(artefact)}" id="sendModal"
											 				 reRender="uploadArtefact">
												<rich:componentControl for="panelArtefact" attachTo="sendModal" operation="show" event="onclick"/>
											</a4j:commandLink>
										</h:panelGroup>
										<h:panelGroup rendered="#{artefact.get(executer.currentUserExecution) != null}">
											<h:panelGroup rendered="#{not executer.currentTaskExecution.finished}" >
												<a4j:commandLink value="#{messages['layout.text.remove']}" action="#{executer.removeArtefact(artefact)}"
												 				 reRender="tasks">
												</a4j:commandLink>
												<h:outputText value=" | " />
											</h:panelGroup>
											<h:commandLink value="#{messages['layout.text.download']}" action="#{sendFile.sendFile(artefact.get(executer.currentUserExecution))}"
											 				 target="_blank">
											</h:commandLink>							
										</h:panelGroup>
										
									</h:column>
								</rich:dataTable>
							</h:panelGrid>
							<h:commandButton action="#{executer.finishTaskExecution()}" 
								value="#{(executer.currentTaskExecution.finished) ? messages['layout.text.workflow.taskFinished'] : messages['layout.text.workflow.finishTask']}" 
								disabled="#{executer.currentTaskExecution.finished}"
								onclick="confirm( '#{messages['layout.messages.areYouSureCannotUndone?']}' )" />
						</rich:panel>
					</ui:repeat>
				</h:panelGroup>
				
				<h:panelGroup id="fields">
					<br />
					<rich:dataGrid var="f" value="#{executer.currentTaskNode.fields}" >
						<h:column>
							<h:outputText value="#{f.name}" />
						</h:column>
						
						<h:column>
							<ui:param name="ua" value="#{f.getUserAssignmentAnswer(executer.userAssignment)}" />
							<h:inputTextarea style="width:100%;" value="#{ua.answer}" disabled="#{executer.currentUserExecution.finishedAt != null}" >
							</h:inputTextarea>
						</h:column>
					</rich:dataGrid>
				</h:panelGroup>
				
			</h:panelGroup>		
		</rich:panel>
		
		<rich:panel header="#{executer.currentJoin.name}" rendered="#{executer.currentJoin != null}">
			<h:outputText value="#{executer.currentJoin.description}" />
		</rich:panel>
		
		<rich:panel header="#{executer.endState.name}" rendered="#{executer.endState != null}">
			<h:outputText value="#{messages['layout.text.workflow.endState']}" /> <br /><br />
			<h:outputText value="#{executer.endState.description}" />
		</rich:panel>
		
		<h:panelGroup rendered="#{executer.currentQuestionnaires.size > 0}">
			<br />
			<rich:separator></rich:separator>
			<ui:repeat var="q" value="#{executer.currentQuestionnaires}">
					<a4j:commandButton reRender="questionnaireForm" action="#{executer.setCurrentQuestionnaire(q)}"
					 value="Questionnaire: #{q.name}" onclick="#{rich:component('panelQuestionnaire')}.show()">
					 	<ui:param name="disabledFieldsParam" value="#{q.isFinished(executer.userAssignment, executer.currentTaskNode)}" />
				    </a4j:commandButton>
			</ui:repeat>
			<rich:separator></rich:separator>
		</h:panelGroup>
		
		<h:panelGroup>
			<h:commandButton action="#{executer.startBreak}" value="#{messages['layout.text.workflow.pause']}" 
								 rendered="#{executer.currentTaskNode != null and executer.currentUserExecution.startedAt != null and executer.currentUserExecution.finishedAt == null}"
								 onclick="javascript:return confirm('#{messages['layout.messages.areYouSure?']}')"
								 styleClass="executeButton">
			</h:commandButton>
			
			<h:commandButton action="#{executer.start()}" value="#{messages['layout.text.workflow.start']}"
							 styleClass="executeButton"
							 rendered="#{executer.currentTaskNode != null and executer.currentUserExecution.startedAt == null}" />
			
			<h:commandButton action="#{executer.finish()}" value="#{messages['layout.text.workflow.finish']}"
							 styleClass="executeButton"
							 rendered="#{executer.currentTaskNode != null and executer.currentUserExecution.startedAt != null and executer.currentUserExecution.finishedAt == null}" />
		
			<ui:repeat var="transition" value="#{executer.transitions}">
				<h:commandButton action="#{executer.next(transition)}" value="#{((executer.currentUserExecution.finishedAt == null or executer.currentTaskNode == null) ? transition.title : messages['layout.text.workflow.next'])}"
								 onclick="#{((executer.currentUserExecution.finishedAt == null and executer.currentTaskNode != null) ? 'javascript:return confirm(\'Are you sure?\')' : '')}"
								 rendered="#{executer.currentTaskNode == null || (executer.currentUserExecution.startedAt != null and executer.currentUserExecution.finishedAt != null) }"
								 styleClass="executeButton"/>
			</ui:repeat>
			
			<h:commandButton action="#{executer.next(null)}" value="#{((executer.currentUserExecution.finishedAt == null or executer.currentTaskNode == null) ? messages['layout.text.workflow.next'] : messages['layout.text.skipFinishedTask'])}"
							 styleClass="executeButton"
							 rendered="#{executer.currentTaskNode != null and executer.currentUserExecution.startedAt != null and executer.transitions.size eq 0}" />
							 
		</h:panelGroup>
	</ui:define>
	
	<ui:define name="modal">
		<rich:modalPanel id="panelBreak" showWhenRendered="true" rendered="#{executer.currentUserExecution.break}" autosized="true" >
	        <f:facet name="header">
	            <h:panelGroup>
	                <h:outputText value="#{messages['layout.text.workflow.pause']}"></h:outputText>
	            </h:panelGroup>
	        </f:facet>
	        <h:panelGroup>
		        <h:form name="breakForm">
					<h:outputLabel value="#{messages['layout.text.workflow.pauseReason']}:" for="breakReason"/>
					<h:inputTextarea id="breakReason" value="#{executer.currentUserExecution.openedBreak.reason}" >
						<a4j:support event="onkeyup" status="noblock" reRender="stopBreakButton" ajaxSingle="true" ignoreDupResponses="true"/>
					</h:inputTextarea>
					<h:commandButton id="stopBreakButton" reRender="panelBreak" action="#{executer.stopBreak}" value="#{messages['layout.text.workflow.continue']}"
						styleClass="executeButton" disabled="#{executer.currentUserExecution.openedBreak.reason.isEmpty()}"/>
			    </h:form>
	        </h:panelGroup>
	     </rich:modalPanel>
	     
	    <rich:modalPanel id="panelQuestionnaire" autosized="true" >
	        <f:facet name="header">
	            <h:panelGroup>
	                <h:outputText value="#{messages['layout.text.questionnaire']}"></h:outputText>
	            </h:panelGroup>
	        </f:facet>
	        <f:facet name="controls">
	            <h:panelGroup>
	                <h:graphicImage value="/img/close.png" styleClass="hidelink" id="hidelinkpanelQuestionnaire"/>
	                <rich:componentControl for="panelQuestionnaire" attachTo="hidelinkpanelQuestionnaire" operation="hide" event="onclick"/>
	            </h:panelGroup>
	        </f:facet>
	        <h:panelGroup id="questionnaireForm" style="height:400px; width: 600px; overflow:auto; display: block;">
		        <h:form enctype="multipart/form-data">
		        		<h3><h:outputText value="Questionnaire: #{executer.currentQuestionnaire.name}" /></h3>
		        		<ui:include src="questionnaireFields.xhtml" >
		        			<ui:param name="questions" value="#{executer.currentQuestionnaire.questions}" />
		        			<ui:param name="disabledFields" value="#{disabledFieldsParam}" />
		        			
		        			<ui:param name="userAssignment" value="#{executer.userAssignment}" />
		        			<ui:param name="taskNode" value="#{executer.currentTaskNode}" />
		        			
		        		</ui:include>
		        		<a4j:commandButton value="Save" action="#{executer.saveQuestionnaire}" id="saveQuestionnaire" onclick="confirm( '#{messages['layout.messages.areYouSureCannotUndone?']}' )" />
		        		<rich:componentControl for="panelQuestionnaire" attachTo="saveQuestionnaire" operation="hide" event="onclick"/>
			    </h:form>
	        </h:panelGroup>
	    </rich:modalPanel>
	    
		 <rich:modalPanel id="panelArtefact"  autosized="true">
	        <f:facet name="header">
	            <h:panelGroup>
	                <h:outputText value="#{messages['layout.text.upload']}"></h:outputText>
	            </h:panelGroup>
	        </f:facet>
	        <f:facet name="controls">
	            <h:panelGroup>
	                <h:graphicImage value="/img/close.png" styleClass="hidelink" id="hidelink"/>
	                <rich:componentControl for="panelArtefact" attachTo="hidelink" operation="hide" event="onclick"/>
	            </h:panelGroup>
	        </f:facet>
	        <h:panelGroup id="uploadArtefact">
		        <h:form enctype="multipart/form-data">
		        		<a4j:jsFunction name="refreshModal" reRender="panelArtefact,tasks,taskNodeArtefacts" />
						<rich:fileUpload
							uploadControlLabel="#{messages['layout.text.send']}"
							immediateUpload="false"
							listHeight="70px;"
				            noDuplicate="true" listWidth="350px;" 
				            locale="pt-BR" 
				            autoclear="false"
				            
				            maxFilesQuantity="1" 
				            cancelEntryControlLabel="#{messages['layout.text.workflow.clean']}"
				            transferErrorLabel="#{messages['layout.messages.fileUploadError']}"           
				            fileUploadListener="#{executer.uploadArtefact}"
				            onfileuploadcomplete="refreshModal()">
				        </rich:fileUpload>
			    </h:form>
	        </h:panelGroup>
	    </rich:modalPanel>
	</ui:define>
</ui:composition>
